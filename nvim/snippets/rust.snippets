# Crates

snippet ec "extern crate"
	extern crate ${1};

# Modules and functions

snippet mod "module"
	mod ${1} {
		${2}
	}

snippet fn "function"
	fn ${1}(${2}) ${3}{
		${4}
	}

snippet fun "function"
	fn ${1}(${2}) ${3}{
		${4}
	}

snippet main "main"
	fn main() {
		${1}
	}

# Structures, enums, and traits

snippet st "struct"
	struct ${1} {
		${2}
	}

snippet en "enum"
	enum ${1} {
		${2}
	}

snippet tr "trait"
	trait ${1} {
		${2}
	}

snippet im "impl"
	impl${1} {
		${2}
	}

# Flow control

snippet { "block"
	{
		${1}
	}

snippet b "block"
	{
		${1}
	}

snippet if "if"
	if ${1} {
		${2}
	}

snippet ife "if-else"
	if ${1} {
		${2}
	} else {
		${3}
	}

snippet m "match"
	match ${1} {
		${2}
	}

snippet lo "loop"
	loop {
		${1}
	}

snippet wh "while"
	while ${1} {
		${2}
	}

snippet for "for"
	for ${1} in ${2} {
		${3}
	}

# Other statements

snippet r "return"
	return ${1};

snippet pr "println!"
	println!("${1}"${2});

snippet epr "eprintln!"
	eprintln!("${1}"${2});

snippet pa "panic!"
	panic!("${1}"${2});

snippet un "unimplemented!"
	unimplemented!(${1});

# Comments

snippet d "documentation"
	//! ${1}

snippet D "documentation"
	/// ${1}

snippet todo "todo"
	// TODO ${1}

snippet code "code"
	/// \`\`\`
	/// ${1}
	/// \`\`\`

# Attributes

snippet at "attribute"
	#[${1}]

# Tests

snippet tm "test module"
	#[cfg(test)]
	mod tests {
		use super::*;

		${1}
	}

snippet t "test"
	#[test]
	fn ${1}() {
		${2}
	}

snippet ae "ae"
	assert_eq!(${1});

# Other

snippet . "self"
	self.

snippet dt "display type"
	let _: () = ${1};
